name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: lpl_db
          POSTGRES_USER: lpl_user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U lpl_user" --health-interval=10s --health-timeout=5s --health-retries=5

      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: example
          MYSQL_DATABASE: mydb
          MYSQL_USER: myuser
          MYSQL_PASSWORD: mypassword
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd Repository/WebServer
          pip install --upgrade pip
          pip install -r requirements.txt

      # - name: Lint with flake8
      #   run: |
      #     pip install flake8
      #     cd Repository/WebServer
      #     flake8 .

      - name: Run tests
        run: |
          pip install pytest
          cd Repository/WebServer
          pytest

      - name: Build Docker image
        run: |
          cd Repository/WebServer
          docker build -t webserver:latest .

      # Optional: Push Docker image to Docker Hub
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      #
      # - name: Push Docker image
      #   run: |
      #     docker tag webserver:latest yourdockerhub/webserver:latest
      #     docker push yourdockerhub/webserver:latest 